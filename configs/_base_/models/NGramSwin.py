# model settings
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    backbone=dict(
        type='NGswin',
        pretrain_img_size=512,
        ngrams=(2,2,2,2),
        patch_size=4,
        embed_dim=64,
        depths=(6,4,4),
        num_heads=(6,4,4),
        head_dim=None,
        dec_dim=64,
        dec_depths=6,
        window_size=8,
        mlp_ratio=2.,
        qkv_bias=True,
        qk_scale=None,
        drop_rate=0.,
        attn_drop_rate=0.,
        drop_path_rate=0.2,
        ape=False,
        patch_norm=True,
        out_indices=(0, 1, 2, 3),
        use_checkpoint=False),
    decode_head=dict(
        type='NGswinHead',
        pretrain_img_size=512,
        ngrams=(2,2,2,2),
        depths=(6,4,4),
        dec_dim=64,
        dec_depths=6, 
        dec_num_heads=6, 
        dec_head_dim=None,
        window_size=8,
        mlp_ratio=2., 
        in_channels=[32, 32, 32, 32],
        in_index=(0, 1, 2, 3),
        input_transform='multiple_select',
        channels=16,
        num_classes=2,
        norm_cfg=norm_cfg,
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    # model training and testing settings
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
